CREATE SEQUENCE ACCOUNT_SEQ
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;

DROP TABLE account;

CREATE TABLE account (
  id INTEGER PRIMARY KEY,
  firstname VARCHAR2(255),
  lastname VARCHAR2(255),
  email VARCHAR2(255) UNIQUE,
  password VARCHAR2(255),
  Userrole VARCHAR2(255)
);




CREATE TABLE customer (
    id INTEGER PRIMARY KEY,
    First_Name VARCHAR2(255) NOT NULL,
    Last_Name VARCHAR2(255) NOT NULL,
    Address VARCHAR2(255) NOT NULL,
    city VARCHAR2(255) NOT NULL,
    postalcode VARCHAR2(255) NOT NULL,
    phone_Number VARCHAR2(255) NOT NULL,
    Join_Date DATE NOT NULL
);


CREATE SEQUENCE CUSTUMERSQUENCE
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;




CREATE TABLE Product (
    id NUMBER(10) PRIMARY KEY,
    price NUMBER(10),
    name VARCHAR2(255),
    description VARCHAR2(255),
    type VARCHAR2(255),
    imagesrc VARCHAR2(255)
);

CREATE SEQUENCE productsquence
START WITH 1
INCREMENT BY 1
NOCACHE;

select * from product order by id desc;
DROP TABLE stock_operation;
CREATE TABLE stock_operation (
  id INTEGER NOT NULL,
  product_id INTEGER NOT NULL,
  quantity INTEGER NOT NULL,
  quantity_consumed INTEGER NOT NULL,
  label VARCHAR(255) NOT NULL,
  PRIMARY KEY (id)
);
ALTER TABLE stock_operation ADD CONSTRAINT fk_product_id
  FOREIGN KEY (product_id)
  REFERENCES product (id);


CREATE SEQUENCE stockOpSequence
START WITH 1
INCREMENT BY 1
NOCACHE;




drop table orders_operation CASCADE CONSTRAINTS;
CREATE TABLE orders_operation (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customerid NUMBER NOT NULL,
    Label VARCHAR2(255) NOT NULL,
    TOTAL_ORDER_PRICE FLOAT NOT NULL,
    ORDER_DATE DATE NOT NULL,
    Confirmation_Date DATE,
    Shipping_Date DATE,
    Receiving_Date DATE,
    CONSTRAINT fk_customer
        FOREIGN KEY (customerid)
        REFERENCES customer (id),
    CONSTRAINT check_total_price
        CHECK (TOTAL_ORDER_PRICE > 0)
);

drop table order_basket;
CREATE TABLE order_Basket (
  basketid NUMBER primary key,
  orderid NUMBER,
  productid INTEGER,
  -- price per unit to keep the price fix in case of price change
  priceperunit NUMBER,
  quantity number,
  CONSTRAINT fk_basket FOREIGN KEY (orderid) REFERENCES orders_operation(id),
  CONSTRAINT fk2_basket FOREIGN KEY (productid) REFERENCES product(id)
);
CREATE SEQUENCE ORDER_BASKET_SEQ START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE SEQUENCE OrdersOPSquence
START WITH 1
INCREMENT BY 1
NOCACHE;

-- clreate all the previous tables
DELETE FROM orders_operation;
DELETE FROM order_basket;
DELETE FROM stock_operation;
-- DELETE FROM product;
DELETE FROM customer;
